{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "transfer_owner_ship"
      ],
      "properties": {
        "transfer_owner_ship": {
          "type": "object",
          "required": [
            "new_owner"
          ],
          "properties": {
            "new_owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_merkle_root"
      ],
      "properties": {
        "set_merkle_root": {
          "type": "object",
          "required": [
            "merkle_root"
          ],
          "properties": {
            "merkle_root": {
              "description": "MerkleRoot is hex-encoded merkle root.",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_presale_info"
      ],
      "properties": {
        "update_presale_info": {
          "type": "object",
          "required": [
            "new_presale_period",
            "new_private_start_time",
            "new_public_start_time"
          ],
          "properties": {
            "new_presale_period": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "new_private_start_time": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "new_public_start_time": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "type": "object",
          "required": [
            "allo_info",
            "proof"
          ],
          "properties": {
            "allo_info": {
              "$ref": "#/definitions/AlloInfo"
            },
            "proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit_private_sale"
      ],
      "properties": {
        "deposit_private_sale": {
          "type": "object",
          "required": [
            "allo_info",
            "proof"
          ],
          "properties": {
            "allo_info": {
              "$ref": "#/definitions/AlloInfo"
            },
            "proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_funds"
      ],
      "properties": {
        "withdraw_funds": {
          "type": "object",
          "required": [
            "receiver"
          ],
          "properties": {
            "receiver": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_unsold_token"
      ],
      "properties": {
        "withdraw_unsold_token": {
          "type": "object",
          "required": [
            "receiver"
          ],
          "properties": {
            "receiver": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AlloInfo": {
      "type": "object",
      "required": [
        "private_allocation",
        "public_allocation"
      ],
      "properties": {
        "private_allocation": {
          "$ref": "#/definitions/Uint128"
        },
        "public_allocation": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
